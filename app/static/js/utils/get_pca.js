function create_pca(input, group) {
        input.forEach(function (t) {
            t['label'] = {
                emphasis: {
                    show: true,
                    formatter: function (param) {
                        return param.data[2];
                    },
                    position: 'top'
                }
            }
        });
        option = {
            title: {
                text: 'PCA plot',
                subtext: 'Generated by PC1 and PC2'
            },
            legend: {
                data: group
            },
            toolbox: {
                show: true,
                feature: {
                    mark: {show: true},
                    dataZoom: {show: true},
                    dataView: {show: true, readOnly: false},
                    restore: {show: true},
                    saveAsImage: {show: true}
                }
            },
            xAxis: [
                {
                    type: 'value',
                    scale: true,
                    name: 'PC1'
                }
            ],
            yAxis: [
                {
                    type: 'value',
                    scale: true,
                    name: 'PC2'
                }
            ],
            series: input
        };
        return option;
    }

function Handerfile(e) {
        if (! e.target.files ){
            createAlert('not find upload file!');
            return;
        }
        var f = e.target.files[0];
        var reader = new FileReader();
        reader.readAsBinaryString(f);
        reader.onload = function (e) {
            var data = e.target.result;
            var workbook = XLSX.read(data, {type: 'binary'});
            var sheet_name_list = workbook.SheetNames;
            var result = [];
            sheet_name_list.forEach(function (t) {
                var worksheet = workbook.Sheets[t];
                var list = XLSX.utils.sheet_to_json(worksheet);
                if (list.length > 0) {
                    result = list;
                }
                });
            var plot_series = [];
            var unique_group = [];
            // get unique group info
            for(var i=0; i<result.length; i++) {
                if (unique_group.indexOf(result[i]['Group']) < 0) {
                    unique_group.push(result[i]['Group']);
                    plot_series.push({
                        'name': result[i]['Group'],
                        'type': 'scatter',
                        'data': []
                    });
                }
            }
            // input each row data
            $.each(result, function (i, val) {
                for(var j=0; j<plot_series.length; j++){
                    if(val['Group'] == plot_series[j]['name']){
                        plot_series[j]['data'].push([Number(val['PC1']), Number(val['PC2']), val['SampleID']]);
                    }
                }
            });
            var pca_plot = echarts.init(document.getElementById('result-plot'));
            option = create_pca(plot_series, unique_group);
            pca_plot.setOption(option);
            $("#upload").val('');
        };
    }

$(document).ready(function () {
    $("#files").on('change', Handerfile);
})